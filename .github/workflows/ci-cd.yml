name: CI/CD Pipeline SkillNest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: > 
          --health-cmd="pg_isready -U ${{ secrets.POSTGRES_USER }}" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: '21'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.8.0'

      - name: Set environment variables
        run: |
          echo "DB_USERNAME=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV

      - name: Build backend (Gradle)
        run: |
          cd backend
          ./gradlew clean build --info

      - name: Run backend tests
        run: |
          cd backend
          ./gradlew test

      - name: Run integration tests
        run: |
          cd backend
          ./gradlew integrationTest

      - name: Generate Test Coverage Report
        run: |
          cd backend
          ./gradlew jacocoTestReport

      - name: Build Docker images (backend and frontend)
        run: docker-compose build

      - name: Run frontend lint
        run: docker-compose run frontend npm run lint

      - name: Run frontend tests
        run: docker-compose run frontend npm run test -- --watch=false --browsers=ChromeHeadless
